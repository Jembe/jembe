{"version":3,"sources":["utils.js","../../../node_modules/process/browser.js","../../../node_modules/node-libs-browser/node_modules/path-browserify/index.js","../../../node_modules/setimmediate/setImmediate.js","../../../node_modules/timers-browserify/main.js","componentApi.js","client.js","jembe.js"],"names":["elIsNewComponent","el","hasAttribute","getAttribute","walkComponentDom","callback","callbackOnNewComponent","myExecName","undefined","componentExecName","firstElementChild","nextElementSibling","AsyncFunction","Object","getPrototypeOf","constructor","deepCopy","inObject","outObject","value","key","Array","isArray","cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","scope","global","self","window","Function","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","require","setImmediate","clearImmediate","JembeComponentAPI","jembeClient","execName","componentRef","refs","onReadyEvents","unnamedTimers","namedTimers","previouseNamedTimers","previousJmbComponentApi","initialiseJmbOnListeners","actionName","params","kwargs","addCallCommand","display","set","stateName","addInitialiseCommand","eventName","to","addEmitCommand","component","relativeExecName","componentNames","startWith","index","equalSoFar","execNameSplit","split","thisExecNameSplit","join","slice","init","referenceName","jmbddattr","jmbDoubleDotAttributes","_processDomAttribute","eventFunction","attrName","attrValue","toLowerCase","startsWith","_processJmbOnAttribute","_processJmbRefAttribute","jmbTag","onEventAndDecorators","onTag","decorators","expression","indexOf","includes","delayIndexOf","timer","endsWith","parseInt","substr","start","Date","getTime","_executeJmbOnLogic","addEventListener","event","actions","helpers","action","Promise","resolve","keys","values","unmount","timerId","timerName","timerInfo","entries","ComponentRef","data","dom","onDocument","state","url","changesUrl","placeHolders","api","hierarchyLevel","mount","force","getPlaceHoldersAndJmbAttributes","jmbComponentApi","hasAttributes","attribute","attributes","toJsonRequest","JembeClient","doc","document","components","getComponentsFromDocument","updateLocation","commands","domParser","DOMParser","xRequestUrl","onpopstate","onHistoryPopState","componentsNodes","querySelectorAll","componentNode","eval","removeAttribute","transformXResponseDom","domString","trim","isPageExecName","parseFromString","documentElement","setAttribute","template","createElement","innerHTML","content","childNodes","div","curChild","firstChild","nextChild","nextSibling","appendChild","nodeType","Node","TEXT_NODE","child","getComponentsFromXResponse","xJembeResponse","xComp","updateDocument","currentComponents","compRef","pageExecNames","filter","pageExecName","pen","processingExecNames","currentExecName","currentCompoRef","shift","mergeComponent","placeHolderName","parentComponent","comp","replaceWith","initParams","exisitingInitCommands","x","type","paramName","paramValue","_updateParam","_updateParamR","paramNames","pName","getXRequestJson","JSON","stringify","map","setXRequestUrl","executeCommands","location","href","requestBody","fetch","method","cache","credentials","redirect","referrer","headers","body","then","response","ok","json","console","error","catch","replace","topComponent","level","historyState","history","replaceState","pushState","domNode","closest"],"mappings":"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","file":"jembe.js","sourceRoot":"../../src/js","sourcesContent":["/**\n * Return null or the execName of the component \n * @param {Element} el \n */\nfunction elIsNewComponent(el) {\n  if (el.hasAttribute('jmb:name')) {\n    return el.getAttribute('jmb:name')\n  } else if (el.hasAttribute('jmb-placeholder')) {\n    return el.getAttribute('jmb-placeholder')\n  } else {\n    return null\n  }\n}\n\nfunction walkComponentDom(el, callback, callbackOnNewComponent, myExecName) {\n  if (myExecName === undefined) {\n    myExecName = el.getAttribute('jmb:name')\n  }\n  let componentExecName = elIsNewComponent(el)\n  if (componentExecName !== null && componentExecName !== myExecName) {\n    callbackOnNewComponent(el, componentExecName)\n  } else {\n    callback(el)\n    el = el.firstElementChild\n    while (el) {\n      walkComponentDom(el, callback, callbackOnNewComponent, myExecName)\n      el = el.nextElementSibling\n    }\n  }\n}\n\nlet AsyncFunction = Object.getPrototypeOf(async function () { }).constructor\n\n\nfunction deepCopy(inObject) {\n  let outObject, value, key\n\n  if (typeof inObject !== \"object\" || inObject === null) {\n    return inObject // Return the value if inObject is not an object\n  }\n\n  // Create an array or object to hold the values\n  outObject = Array.isArray(inObject) ? [] : {}\n\n  for (key in inObject) {\n    value = inObject[key]\n\n    // Recursively (deep) copy for nested objects, including arrays\n    outObject[key] = deepCopy(value)\n  }\n\n  return outObject\n}\nexport { walkComponentDom, AsyncFunction, deepCopy }","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","import { JembeClient } from \"./client\"\nimport { walkComponentDom, AsyncFunction, deepCopy } from \"./utils\";\nimport { isAbsolute, join } from \"path\";\nimport { clearTimeout } from \"timers\";\n/**\n * jembeClient.component(this).set('paramName', paramValue)\n * jembeClient.component(this).call('actionName', {kwargs})\n * jembeClient.component(this).display()\n * jembeClient.component(this).emit('eventName', {kwargs})\n * jembeClient.component(this).init('componentRelativeOrFullName', {kwargs})\n * jembeClient.executeCommands()\n * \n * Short form that needs to be support for jmb:on.<eventName>[.defer]:\n * $jmb.set('paramName', paramValue)\n * $jmb.call('actionName', {kwargs}) or actionName({kwargs})\n * $jmb.display() // call('display',{})\n * $jmb.emit('eventName',{kwargs})\n * $jmb.[init|component]('componentRelativeOrFullName', {kwargs})[.call|.display|.emit]\n * \n * $jmb.ref('referencedDomName') // jmb:ref=\"referencedDomName\"\n */\nclass JembeComponentAPI {\n  constructor(jembeClient, execName, componentRef) {\n    /** @type {JembeClient} */\n    this.jembeClient = jembeClient\n    /** @type {ComponentRef} */\n    this.componentRef = componentRef\n    this.execName = execName\n    this.refs = {}\n\n    // internal\n    this.onReadyEvents = []\n    this.unnamedTimers = []\n    this.namedTimers = {}\n    this.previouseNamedTimers = {}\n    if (componentRef !== undefined && componentRef.previousJmbComponentApi !== null) {\n      this.previouseNamedTimers = deepCopy(componentRef.previousJmbComponentApi.namedTimers) \n    } \n\n    // initialistion\n    this.initialiseJmbOnListeners()\n  }\n  call(actionName, ...params) {\n    let kwargs = {}\n    let args = []\n    if (params.length === 1 && params[0].constructor == Object) {\n      kwargs = params[0]\n    } else {\n      args = params\n    }\n    this.jembeClient.addCallCommand(\n      this.execName,\n      actionName,\n      args,\n      kwargs\n    )\n  }\n  display() {\n    this.call(\"display\")\n  }\n  /**\n   *  Change state param of current component,\n   *  by addig initialise command with only state param \n   *  defined by stateName changed to newlly provided value\n   * stateName can use dots (.) to set attribure of object\n   * Examples: \"someObject.paramName\" \n   * @param {string} stateName \n   * @param {*} value \n   */\n  set(stateName, value) {\n    let params = {}\n    params[stateName] = value\n    this.jembeClient.addInitialiseCommand(\n      this.execName,\n      params\n    )\n  }\n  emit(eventName, kwargs = {}, to = null) {\n    this.jembeClient.addEmitCommand(\n      this.execName,\n      eventName,\n      kwargs,\n      to\n    )\n  }\n  component(relativeExecName, kwargs = {}) {\n    let execName = relativeExecName\n    if (!isAbsolute(relativeExecName)) {\n      execName = join(this.execName, relativeExecName)\n    }\n    let componentNames = []\n    let startWith = []\n    let index = 0\n    let equalSoFar = true\n    let execNameSplit = execName.split(\"/\")\n    let thisExecNameSplit = this.execName.split(\"/\")\n    while (index < execNameSplit.length) {\n      if (equalSoFar === true &&\n        (\n          // if execName is different (including key) we need to genereate init command\n          execNameSplit[index] !== thisExecNameSplit[index] ||\n          // alsy if kwargs are specified for last component we need do generate init command\n          (index === execNameSplit.length - 1 && kwargs !== {})\n        )\n      ) {\n        equalSoFar = false\n      }\n      if (!equalSoFar) {\n        componentNames.push(execNameSplit[index])\n      } else {\n        startWith.push(execNameSplit[index])\n      }\n      index++\n    }\n\n    index = 0\n    while (index < componentNames.length) {\n      this.jembeClient.addInitialiseCommand(\n        [\n          startWith.join(\"/\"),\n          componentNames.slice(0, index + 1).join(\"/\")\n        ].join(\"/\"),\n        index == componentNames.length - 1 ? kwargs : {}\n      )\n      index++\n    }\n    return new JembeComponentAPI(this.jembeClient, execName)\n  }\n  init(relativeExecName, kwargs = {}) {\n    return this.component(relativeExecName, kwargs)\n  }\n  ref(referenceName) {\n    return this.refs[referenceName]\n  }\n\n  initialiseJmbOnListeners() {\n    if (this.componentRef !== undefined) {\n      // TODO walk dom and select elements\n      this.onReadyEvents = []\n      for (const jmbddattr of this.componentRef.jmbDoubleDotAttributes) {\n        this._processDomAttribute(jmbddattr.el, jmbddattr.name, jmbddattr.value)\n      }\n      for (const eventFunction of this.onReadyEvents) {\n        eventFunction()\n      }\n    }\n  }\n  _processDomAttribute(el, attrName, attrValue) {\n    attrName = attrName.toLowerCase()\n    if (attrName.startsWith('jmb:on.')) {\n      this._processJmbOnAttribute(el, attrName, attrValue)\n    } else if (attrName === \"jmb:ref\") {\n      this._processJmbRefAttribute(el, attrName, attrValue)\n    }\n  }\n  _processJmbOnAttribute(el, attrName, attrValue) {\n    let [jmbTag, onEventAndDecorators, actionName] = attrName.split(\":\")\n    let [onTag, eventName, ...decorators] = onEventAndDecorators.split(\".\")\n\n    let expression = `${attrValue}`\n\n    // support defer decorator\n    if (decorators.indexOf(\"defer\") < 0) {\n      if (expression.includes(\"$jmb.set(\")) {\n        // if action is not deferred and has $jmb.set then call display\n        expression += \";$jmb.display();\"\n      }\n      expression += ';window.jembeClient.executeCommands();'\n    } \n    //support delay decorator\n    // must be last decorator\n    const delayIndexOf = decorators.indexOf(\"delay\")\n    if (delayIndexOf >= 0) {\n      let timer = 1000\n      if (delayIndexOf + 1 < decorators.length && decorators[delayIndexOf + 1].endsWith('ms')) {\n        timer = parseInt(decorators[delayIndexOf + 1].substr(0, decorators[delayIndexOf + 1].length - 2)) * 10\n      }\n      if (actionName === undefined) {\n        expression = `\n        var timerId = window.setTimeout(function() {${expression}}, ${timer});\n        $jmb.unnamedTimers.push(timerId);\n        `\n      } else {\n        let start = new Date().getTime()\n        if (this.previouseNamedTimers[actionName] !== undefined) {\n          start = this.previouseNamedTimers[actionName].start\n          timer = timer - ((new Date().getTime()) - start)\n        }\n\n        if (timer > 0) {\n          expression = `\n          var timerId = window.setTimeout(function() {\n            ${expression};\n            delete $jmb.namedTimers['${actionName}'];\n          }, ${timer});\n          $jmb.namedTimers['${actionName}'] = {id: timerId, start: ${start}};\n          `\n        } else {\n          //run emidiatly like on.ready\n          this.onReadyEvents.push(() => this._executeJmbOnLogic(el, null, expression))\n        }\n      }\n    }\n\n    if (eventName === 'ready') {\n      // support on.ready event, that is executed when component is rendered\n      // that means execute it right now\n      this.onReadyEvents.push(() => this._executeJmbOnLogic(el, null, expression))\n    } else {\n      // support for browser events\n      el.addEventListener(eventName, (event) => {\n        this._executeJmbOnLogic(el, event, expression)\n      })\n    }\n\n  }\n  _processJmbRefAttribute(el, attrName, attrValue) {\n    this.refs[attrValue] = el\n  }\n  _executeJmbOnLogic(el, event, expression) {\n    /** @type {Array<string>} */\n    const actions = this.componentRef.actions\n    let helpers = {\n      \"$jmb\": this,\n      \"$event\": event,\n      \"$el\": el,\n    }\n    // allow action functions to be called directly \n    for (const action of actions) {\n      helpers[action] = (...params) => {\n        this.call(action, ...params)\n      }\n    }\n\n    let scope = {\n    }\n    return Promise.resolve(\n      (\n        new AsyncFunction(\n          ['scope', ...Object.keys(helpers)],\n          `with(scope) { ${expression} }`\n        )\n      )(\n        scope, ...Object.values(helpers)\n      )\n    )\n  }\n  unmount() {\n    for (const timerId of this.unnamedTimers) {\n      window.clearTimeout(timerId)\n    }\n    for (const [timerName, timerInfo] of Object.entries(this.namedTimers)) {\n      window.clearTimeout(timerInfo.id)\n    }\n  }\n}\nexport { JembeComponentAPI }","/*\n  Supported tags:\n    # jmb:on.<eventname>.<modifier>.<modifier>\n    # jmb:model=\n    <button jmb:on.click=\"$jmb.call('increase',10)\"\n*/\nimport { JembeComponentAPI } from \"./componentApi.js\";\nimport { deepCopy, walkComponentDom } from \"./utils.js\";\n\n/**\n * Reference to component html with associated data\n */\nclass ComponentRef {\n\n  constructor(execName, data, dom, onDocument) {\n    this.execName = execName\n    this.state = data.state\n    this.url = data.url\n    this.changesUrl = data.changesUrl\n    this.actions = data.actions !== undefined ? data.actions : []\n    this.dom = dom\n    this.placeHolders = {}\n    this.jmbDoubleDotAttributes = []\n    this.onDocument = onDocument\n    this.api = null\n    this.hierarchyLevel = execName.split(\"/\").length\n    this.previousJmbComponentApi = null\n  }\n  mount(jembeClient, force = false) {\n    if (this.api === null || force) {\n      this.getPlaceHoldersAndJmbAttributes()\n      this.api = new JembeComponentAPI(jembeClient, this.execName, this)\n      this.dom.jmbComponentApi = this.api\n      this.previousJmbComponentApi = null\n    }\n  }\n\n  getPlaceHoldersAndJmbAttributes() {\n    this.placeHolders = {}\n    this.jmbDoubleDotAttributes = []\n    walkComponentDom(\n      this.dom,\n      (el) => {\n        // populate jmbDoubleDotAttributes\n        if (el.hasAttributes()) {\n          for (const attribute of el.attributes) {\n            if (attribute.name.startsWith(\"jmb:\")) {\n              this.jmbDoubleDotAttributes.push({\n                el: el,\n                name: attribute.name,\n                value: attribute.value\n              })\n            }\n          }\n        }\n      },\n      (el, execName) => {\n        // populate placeHolders\n        this.placeHolders[execName] = el\n      }\n    )\n  }\n  toJsonRequest() {\n    return {\n      \"execName\": this.execName,\n      \"state\": this.state\n    }\n  }\n}\n/**\n * Handle all jembe logic on client side, primarly building, sending, processing \n * and refreshing page for/on x-jembe requests\n */\nclass JembeClient {\n  constructor(doc = document) {\n    this.document = doc\n    this.components = {}\n    this.getComponentsFromDocument()\n    this.updateLocation(true)\n    this.commands = []\n    this.domParser = new DOMParser()\n    this.xRequestUrl = null\n\n    window.onpopstate = this.onHistoryPopState\n  }\n  /**\n   * Finds all jmb:name and associate jmb:data tags in document \n   * and create ComponentRefs\n   */\n  getComponentsFromDocument() {\n    // \n    this.components = {}\n    // TODO traverse dom dont use querySelectorAll\n    let componentsNodes = this.document.querySelectorAll(\"[jmb\\\\:name][jmb\\\\:data]\")\n    for (const componentNode of componentsNodes) {\n      const execName = componentNode.getAttribute('jmb:name')\n      const componentRef = new ComponentRef(\n        execName,\n        eval(`(${componentNode.getAttribute('jmb:data')})`),\n        componentNode,\n        true\n      )\n      componentNode.removeAttribute('jmb:data')\n      componentRef.mount(this)\n      this.components[execName] = componentRef\n    }\n  }\n  transformXResponseDom(execName, domString) {\n    // if html dom has only one child use that child to put jmb:name tag\n    // if not enclose html with div and put jmb:name into it\n    // TODO: How to run event handlers onclick jmb:on.click <script> etc found in\n    // html after integration with document\n    domString = domString.trim()\n    if (!this.isPageExecName(execName)) {\n      let template = this.document.createElement(\"template\")\n      template.innerHTML = domString\n      if (template.content.childNodes.length > 1) {\n        let div = this.document.createElement(\"div\")\n        let curChild = template.content.firstChild\n        while (curChild) {\n          let nextChild = curChild.nextSibling\n          div.appendChild(curChild)\n          curChild = nextChild\n        }\n        template.content.appendChild(div)\n      }\n      // check is it needed to add souranding DIV tag\n      // add jmb:name tag\n      if (template.content.childNodes.length > 1 ||\n        template.content.childNodes.length === 0 ||\n        template.content.firstChild.nodeType === Node.TEXT_NODE ||\n        (template.content.childNodes.length === 1 &&\n          (template.content.firstChild.hasAttribute(\"jmb:name\") ||\n            template.content.firstChild.hasAttribute(\"jmb-placeholder\")))) {\n        let div = this.document.createElement(\"div\")\n        for (const child of template.content.childNodes) {\n          div.appendChild(child)\n        }\n        div.setAttribute(\"jmb:name\", execName)\n        return div\n      } else {\n        template.content.firstChild.setAttribute(\"jmb:name\", execName)\n        return template.content.firstChild\n      }\n    } else {\n      const doc = this.domParser.parseFromString(domString, \"text/html\")\n      doc.documentElement.setAttribute(\"jmb:name\", execName)\n      return doc.documentElement\n    }\n  }\n  /**\n   * Create dict of {execName:component} for all components find in\n   * x-jembe response\n   * @param {*} xJembeResponse \n   */\n  getComponentsFromXResponse(xJembeResponse) {\n    let components = {}\n    for (const xComp of xJembeResponse) {\n      const dom = xComp.dom\n      components[xComp.execName] = new ComponentRef(\n        xComp.execName,\n        {\n          \"url\": xComp.url,\n          \"changesUrl\": xComp.changesUrl,\n          \"state\": xComp.state,\n          \"actions\": xComp.actions\n        },\n        this.transformXResponseDom(xComp.execName, xComp.dom),\n        false\n      )\n    }\n    return components\n  }\n  /**\n   * Update document with new components:dict\n   * @param {} components \n   */\n  updateDocument(components) {\n    // make list of all existing components that can be display on updated document\n    // list contains all from this.components merged with components where\n    // if there is components with same execname one from components is used\n    let currentComponents = {}\n    // add from this.components if not exist in components otherwise add from components\n    for (const [execName, compRef] of Object.entries(this.components)) {\n      if (components[execName] === undefined) {\n        currentComponents[execName] = compRef\n      } else {\n        currentComponents[execName] = components[execName]\n      }\n    }\n    // add from components if not already added\n    for (const [execName, compRef] of Object.entries(components)) {\n      if (currentComponents[execName] === undefined) {\n        currentComponents[execName] = compRef\n      }\n    }\n    //process current components one by one starting with root page\n    // all components gatthered from document but whitout its placeholder\n    // will be ignored.\n    // chose root/page component from compoents if it exist otherwise use\n    // one on the document\n    let pageExecNames = Object.keys(currentComponents).filter(\n      execName => this.isPageExecName(execName)\n    )\n    let pageExecName = pageExecNames[0]\n    if (pageExecNames.length > 1) {\n      for (const pen of pageExecNames) {\n        if (!currentComponents[pen].onDocument) {\n          pageExecName = pen\n        }\n      }\n    }\n    let processingExecNames = [pageExecName]\n    this.components = {}\n    while (processingExecNames.length > 0) {\n      const currentExecName = processingExecNames.shift()\n      const currentCompoRef = currentComponents[currentExecName]\n      this.mergeComponent(currentCompoRef)\n      this.components[currentCompoRef.execName] = currentCompoRef\n      currentCompoRef.mount(this)\n      for (const placeHolderName of Object.keys(currentCompoRef.placeHolders)) {\n        processingExecNames.push(placeHolderName)\n      }\n    }\n  }\n  /**\n   * Replaces component dom in this.document\n   * and update this.components\n   */\n  mergeComponent(componentRef) {\n    if (this.isPageExecName(componentRef.execName)) {\n      // if page component is already on document do nothing\n      if (!componentRef.onDocument) {\n        if (this.document.documentElement.jmbComponentApi !== undefined) {\n          this.document.documentElement.jmbComponentApi.unmount()\n          componentRef.previousJmbComponentApi = this.document.documentElement.jmbComponentApi\n        }\n        this.document.documentElement.innerHTML = componentRef.dom.innerHTML\n        componentRef.dom = this.document.documentElement\n        componentRef.dom.setAttribute(\"jmb:name\", componentRef.execName)\n        componentRef.mount(this, true) // because we use innerHTML not appendChild\n        componentRef.onDocument = true\n      }\n    } else {\n      // search this.components for component with placeholder for this component\n      let parentComponent = Object.values(this.components).filter(\n        comp => Object.keys(comp.placeHolders).includes(componentRef.execName)\n      )[0]\n      if (parentComponent.placeHolders[componentRef.execName].jmbComponentApi !== undefined) {\n        parentComponent.placeHolders[componentRef.execName].jmbComponentApi.unmount()\n        componentRef.previousJmbComponentApi = parentComponent.placeHolders[componentRef.execName].jmbComponentApi\n      }\n      parentComponent.placeHolders[componentRef.execName].replaceWith(componentRef.dom)\n      parentComponent.placeHolders[componentRef.execName] = componentRef.dom\n      componentRef.mount(this)\n      componentRef.onDocument = true\n    }\n  }\n  isPageExecName(execName) {\n    return execName.split(\"/\").length === 2\n  }\n\n  addInitialiseCommand(execName, initParams) {\n    const exisitingInitCommands = this.commands.filter(\n      x => x.type === \"init\" && x.componentExecName === execName\n    )\n    if (exisitingInitCommands.length > 0) {\n      for (const [paramName, paramValue] of Object.entries(initParams)) {\n        exisitingInitCommands[0].initParams = this._updateParam(\n          exisitingInitCommands[0].initParams, paramName, paramValue\n        )\n        // exisitingInitCommands[0].initParams[paramName] = initParams[paramName]\n      }\n    } else {\n      let params = (this.components[execName] !== undefined) ? deepCopy(this.components[execName].state) : {}\n      for (const [paramName, paramValue] of Object.entries(initParams)) {\n        params = this._updateParam(params, paramName, paramValue)\n      }\n      this.commands.push(\n        {\n          \"type\": \"init\",\n          \"componentExecName\": execName,\n          \"initParams\": params\n        }\n      )\n    }\n  }\n  /**\n   * Update params with [paramName] =  paramValue\n   * paramName can contain dots (.) to separate object attributes\n   * @param {dict} params \n   * @param {string} paramName \n   * @param {*} paramValue \n   */\n  _updateParam(params, paramName, paramValue) {\n    if (paramName.startsWith('.') || paramName.endsWith(\".\")) {\n      throw \"paramName cant start or end in dot (.)\"\n    }\n    return this._updateParamR(params, paramName.split(\".\"), paramValue)\n  }\n  _updateParamR(params, paramNames, paramValue) {\n    let pName = paramNames[0]\n    if (paramNames.length === 1) {\n      // last element\n      params[pName] = paramValue\n    } else if (params[pName] === undefined) {\n      params[pName] = this._updateParamR({}, paramNames.slice(1), paramValue)\n    } else {\n      params[pName] = this._updateParamR(params[pName], paramNames.slice(1), paramValue)\n    }\n    return params\n  }\n\n  addCallCommand(execName, actionName, args, kwargs) {\n    this.commands.push(\n      {\n        \"type\": \"call\",\n        \"componentExecName\": execName,\n        \"actionName\": actionName,\n        \"args\": args,\n        \"kwargs\": kwargs\n      }\n    )\n  }\n  addEmitCommand(execName, eventName, kwargs = {}, to = null) {\n    this.commands.push(\n      {\n        \"type\": \"emit\",\n        \"componentExecName\": execName,\n        \"eventName\": eventName,\n        \"params\": kwargs,\n        \"to\": to\n      }\n    )\n\n  }\n  getXRequestJson() {\n    // TODO get and send uploaded files\n    return JSON.stringify({\n      \"components\": Object.values(this.components).map(x => x.toJsonRequest()),\n      \"commands\": this.commands\n    })\n  }\n  setXRequestUrl(url) {\n    this.xRequestUrl = url\n  }\n  executeCommands(updateLocation = true) {\n    const url = this.xRequestUrl !== null ? this.xRequestUrl : window.location.href\n    const requestBody = this.getXRequestJson()\n    // reset commads since we create request body from it\n    this.commands = []\n    // fetch request and process response\n    window.fetch(url, {\n      method: \"POST\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      headers: { 'X-JEMBE': true },\n      body: requestBody\n    }).then(\n      response => {\n        if (response.ok) {\n          return response.json()\n        } else {\n          console.error(\"Request not successfull\")\n        }\n      }\n    ).catch(error => {\n      console.error(\"Error in request\", error)\n    }).then(\n      json => this.getComponentsFromXResponse(json)\n    ).then(\n      components => {\n        this.updateDocument(components)\n        if (updateLocation) {\n          this.updateLocation()\n        }\n      }\n    )\n  }\n  updateLocation(replace = false) {\n    let topComponent = null\n    let level = -1\n    let historyState = []\n    for (const component of Object.values(this.components)) {\n      if (component.hierarchyLevel > level && component.changesUrl === true) {\n        topComponent = component\n        level = component.hierarchyLevel\n      }\n      historyState.push({ execName: component.execName, state: component.state })\n    }\n    if (topComponent !== null) {\n      if (replace) {\n        window.history.replaceState(historyState, '', topComponent.url)\n      } else {\n        window.history.pushState(historyState, '', topComponent.url)\n      }\n    }\n  }\n  onHistoryPopState(event) {\n    if (event.state === null) {\n      window.location = document.location\n    } else {\n      for (const comp of event.state) {\n        this.jembeClient.addInitialiseCommand(comp.execName, comp.state)\n        this.jembeClient.addCallCommand(comp.execName, \"display\")\n      }\n      this.jembeClient.executeCommands(false)\n    }\n  }\n  /**\n   * Used for geting jembeCompoentApi usually attached to document or window.jembeComponent \n   * @param {*} domNode \n   */\n  component(domNode) {\n    const componentExecName = domNode.closest('[jmb\\\\:name]').getAttribute('jmb:name')\n    return this.components[componentExecName].api\n  }\n}\n\nexport { JembeClient }","import { JembeClient } from \"./client.js\";\nwindow.jembeClient = new JembeClient(document)"]}