{"version":3,"sources":["utils.js","../../../node_modules/process/browser.js","../../../node_modules/node-libs-browser/node_modules/path-browserify/index.js","componentApi.js","client.js","jembe.js"],"names":["elIsNewComponent","el","hasAttribute","walkComponentDom","callback","firstElementChild","nextElementSibling","AsyncFunction","Object","getPrototypeOf","constructor","cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","JembeComponentAPI","jembeClient","componentExecName","initListeners","execName","initialiseJmbOnListeners","refs","actionName","kwargs","addCallCommand","display","set","stateName","value","params","addInitialiseCommand","eventName","to","addEmitCommand","component","relativeExecName","componentNames","startWith","index","equalSoFar","execNameSplit","split","thisExecNameSplit","join","slice","init","ref","referenceName","componentRef","components","undefined","dom","hasAttributes","attribute","attributes","_processDomAttribute","attrName","attrValue","toLowerCase","startsWith","jmbOn","decorators","expression","indexOf","addEventListener","event","helpers","Promise","resolve","keys","values","ComponentRef","data","onDocument","state","url","changesUrl","placeHolders","getPlaceHolders","api","hierarchyLevel","placeholder","querySelectorAll","getAttribute","toJsonRequest","JembeClient","doc","document","getComponentsFromDocument","initComponentsAPI","updateLocation","commands","domParser","DOMParser","xRequestUrl","window","onpopstate","onHistoryPopState","componentsNodes","componentNode","eval","removeAttribute","transformXResponseDom","domString","isPageExecName","parseFromString","documentElement","setAttribute","template","createElement","innerHTML","content","childNodes","div","curChild","firstChild","nextChild","nextSibling","appendChild","nodeType","Node","TEXT_NODE","child","getComponentsFromXResponse","xJembeResponse","xComp","updateDocument","currentComponents","compRef","entries","pageExecNames","filter","pageExecName","pen","processingExecNames","currentExecName","currentCompoRef","shift","mergeComponent","placeHolderName","comp","includes","replaceWith","initParams","exisitingInitCommands","x","type","key","getXRequestJson","JSON","stringify","map","setXRequestUrl","executeCommands","location","href","requestBody","fetch","method","cache","credentials","redirect","referrer","headers","body","then","response","ok","json","console","error","catch","replace","topComponent","level","historyState","history","replaceState","pushState","domNode","closest"],"mappings":"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","file":"jembe.js","sourceRoot":"../../src/js","sourcesContent":["function elIsNewComponent(el) {\n  return el.hasAttribute('jmb:name')\n}\n\nfunction walkComponentDom(el, callback) {\n\n  if (!elIsNewComponent(el)) {\n    callback(el)\n  }\n  el = el.firstElementChild\n  while (el) {\n    if (!elIsNewComponent(el)) {\n      walkComponentDom(el, callback)\n    }\n    el = el.nextElementSibling\n  }\n}\n\nlet AsyncFunction = Object.getPrototypeOf(async function () { }).constructor\nexport { walkComponentDom, AsyncFunction }","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","import { JembeClient } from \"./client\"\nimport { walkComponentDom, AsyncFunction } from \"./utils\";\nimport { isAbsolute, join } from \"path\";\n/**\n * jembeClient.component(this).set('paramName', paramValue)\n * jembeClient.component(this).call('actionName', {kwargs})\n * jembeClient.component(this).display()\n * jembeClient.component(this).emit('eventName', {kwargs})\n * jembeClient.component(this).init('componentRelativeOrFullName', {kwargs})\n * jembeClient.executeCommands()\n * \n * Short form that needs to be support for jmb:on.<eventName>[.deferred]:\n * $jmb.set('paramName', paramValue)\n * $jmb.call('actionName', {kwargs}) or actionName({kwargs})\n * $jmb.display() // call('display',{})\n * $jmb.emit('eventName',{kwargs})\n * $jmb.[init|component]('componentRelativeOrFullName', {kwargs})[.call|.display|.emit]\n * \n * $jmb.ref('referencedDomName') // jmb:ref=\"referencedDomName\"\n */\nclass JembeComponentAPI {\n  constructor(jembeClient, componentExecName, initListeners = true) {\n    /** @type {JembeClient} */\n    this.jembeClient = jembeClient\n    /** @type {ComponentRef} */\n    this.execName = componentExecName\n    if (initListeners) {\n      this.initialiseJmbOnListeners()\n    }\n    this.refs = {}\n  }\n  call(actionName, kwargs = {}, args = []) {\n    this.jembeClient.addCallCommand(\n      this.execName,\n      actionName,\n      args,\n      kwargs\n    )\n  }\n  display() {\n    this.call(\"display\")\n  }\n  set(stateName, value) {\n    //TODO set deep parameters\n    params = {}\n    params[stateName] = value\n    this.jembeClient.addInitialiseCommand(\n      this.execName,\n      params\n    )\n  }\n  emit(eventName, kwargs = {}, to = null) {\n    this.jembeClient.addEmitCommand(\n      this.execName,\n      eventName,\n      kwargs,\n      to\n    )\n  }\n  component(relativeExecName, kwargs = {}) {\n    let execName = relativeExecName\n    if (!isAbsolute(relativeExecName)) {\n      execName = join(this.execName, relativeExecName)\n    }\n    let componentNames = []\n    let startWith = []\n    let index = 0\n    let equalSoFar = true\n    let execNameSplit = execName.split(\"/\")\n    let thisExecNameSplit = this.execName.split(\"/\")\n    while (index < execNameSplit.length) {\n      if (equalSoFar === true && execNameSplit[index] !== thisExecNameSplit[index]) {\n        equalSoFar = false\n      }\n      if (!equalSoFar) {\n        componentNames.push(execNameSplit[index])\n      } else {\n        startWith.push(execNameSplit[index])\n      }\n      index++\n    }\n    index = 0\n    while (index < componentNames.length) {\n      this.jembeClient.addInitialiseCommand(\n        [\n          startWith.join(\"/\"),\n          componentNames.slice(0, index + 1).join(\"/\")\n        ].join(\"/\"),\n        index == componentNames.length - 1 ? kwargs : {}\n      )\n      index++\n    }\n    return new JembeComponentAPI(this.jembeClient, execName, false)\n  }\n  init(relativeExecName, kwargs = {}) {\n    return this.component(relativeExecName, kwargs)\n  }\n  ref(referenceName) {\n    return this.refs[referenceName]\n  }\n  initialiseJmbOnListeners() {\n    /** @type {ComponentRef} */\n    const componentRef = this.jembeClient.components[this.execName]\n    if (componentRef !== undefined) {\n      // TODO walk dom and select elements\n      walkComponentDom(componentRef.dom, el => {\n        // initialise event listeneres for jmb:on. attributes\n        if (el.hasAttributes()) {\n          for (const attribute of el.attributes) {\n            this._processDomAttribute(el, attribute.name, attribute.value)\n          }\n        }\n      })\n    }\n  }\n  _processDomAttribute(el, attrName, attrValue) {\n    attrName = attrName.toLowerCase()\n    if (attrName.startsWith('jmb:on.')) {\n      let [jmbOn, eventName, ...decorators] = attrName.split(\".\")\n\n      // support deferred decorator\n      const deferred = decorators.indexOf(\"deferred\") >= 0 ? \"\" : 'window.jembeClient.executeCommands()'\n\n      let expression = `${attrValue};${deferred}`\n\n      el.addEventListener(eventName, (event) => {\n        let helpers = {\n          \"$jmb\": this,\n          \"$event\": event,\n          \"$el\": el\n        }\n        let scope = {\n        }\n        return Promise.resolve(\n          (\n            new AsyncFunction(\n              ['scope', ...Object.keys(helpers)],\n              `with(scope) { ${expression} }`\n            )\n          )(\n            scope,...Object.values(helpers)\n          )\n        )\n      })\n\n    } else if (attrName === \"jmb:ref\") {\n      this.refs[attrValue] = el\n    }\n  }\n}\nexport { JembeComponentAPI }","/*\n  Supported tags:\n    # jmb:on.<eventname>.<modifier>.<modifier>\n    # jmb:model=\n    <button jmb:on.click=\"$jmb.call('increase',10)\"\n  TODO\n  On x-jembe response update page:  \n    - update only changed html of received components html\n    - update window location\n\n\n    build commands, send it and process response\n    initialise ClientApi for every component\n    add handles for jmb:on...\n    $jmb (clientApi) avaiable in jmb:on... scripts\n*/\nimport { JembeComponentAPI } from \"./componentApi.js\";\n\n/**\n * Reference to component html with associated data\n */\nclass ComponentRef {\n\n  constructor(execName, data, dom, onDocument) {\n    this.execName = execName\n    this.state = data.state\n    this.url = data.url\n    this.changesUrl = data.changesUrl\n    this.dom = dom\n    this.placeHolders = {}\n    this.onDocument = onDocument\n    this.getPlaceHolders()\n    this.api = null\n    this.hierarchyLevel = execName.split(\"/\").length\n  }\n\n  getPlaceHolders() {\n    this.placeHolders = {}\n    for (const placeholder of this.dom.querySelectorAll(\"template[jmb-placeholder]\")) {\n      this.placeHolders[placeholder.getAttribute(\"jmb-placeholder\")] = placeholder\n    }\n    for (const placeholder of this.dom.querySelectorAll(\"[jmb\\\\:name]\")) {\n      this.placeHolders[placeholder.getAttribute(\"jmb:name\")] = placeholder\n    }\n  }\n  toJsonRequest() {\n    return {\n      \"execName\": this.execName,\n      \"state\": this.state\n    }\n  }\n}\n/**\n * Handle all jembe logic on client side, primarly building, sending, processing \n * and refreshing page for/on x-jembe requests\n */\nclass JembeClient {\n  constructor(doc = document) {\n    this.document = doc\n    this.components = this.getComponentsFromDocument()\n    this.initComponentsAPI()\n    this.updateLocation(true)\n    this.commands = []\n    this.domParser = new DOMParser()\n    this.xRequestUrl = null\n\n    window.onpopstate = this.onHistoryPopState\n  }\n  /**\n   * Finds all jmb:name and associate jmb:data tags in document \n   * and create ComponentRefs\n   */\n  getComponentsFromDocument() {\n    // \n    let components = {}\n    // TODO traverse dom dont use querySelectorAll\n    let componentsNodes = this.document.querySelectorAll(\"[jmb\\\\:name][jmb\\\\:data]\")\n    for (const componentNode of componentsNodes) {\n      const execName = componentNode.getAttribute('jmb:name')\n      components[execName] = new ComponentRef(\n        execName,\n        eval(`(${componentNode.getAttribute('jmb:data')})`),\n        componentNode,\n        true\n      )\n      componentNode.removeAttribute('jmb:data')\n    }\n    return components\n  }\n  transformXResponseDom(execName, domString) {\n    // if html dom has only one child use that child to put jmb:name tag\n    // if not enclose html with div and put jmb:name into it\n    // TODO: How to run event handlers onclick jmb:on.click <script> etc found in\n    // html after integration with document\n    if (!this.isPageExecName(execName)) {\n      let template = this.document.createElement(\"template\")\n      template.innerHTML = domString\n      if (template.content.childNodes.length > 1) {\n        let div = this.document.createElement(\"div\")\n        let curChild = template.content.firstChild\n        while (curChild) {\n          let nextChild = curChild.nextSibling\n          div.appendChild(curChild)\n          curChild = nextChild\n        }\n        template.content.appendChild(div)\n      }\n      // check is it needed to add souranding DIV tag\n      // add jmb:name tag\n      if (template.content.childNodes.length > 1 ||\n          template.content.childNodes.length === 0 ||\n          template.content.firstChild.nodeType === Node.TEXT_NODE) {\n        let div = this.document.createElement(\"div\")\n        for (const child of template.content.childNodes) {\n          div.appendChild(child)\n        }\n        div.setAttribute(\"jmb:name\", execName)\n        return div\n      } else {\n        template.content.firstChild.setAttribute(\"jmb:name\", execName)\n        return template.content.firstChild\n      }\n    } else {\n      const doc = this.domParser.parseFromString(domString, \"text/html\")\n      doc.documentElement.setAttribute(\"jmb:name\", execName)\n      return doc.documentElement\n    }\n  }\n  /**\n   * Create dict of {execName:component} for all components find in\n   * x-jembe response\n   * @param {*} xJembeResponse \n   */\n  getComponentsFromXResponse(xJembeResponse) {\n    let components = {}\n    for (const xComp of xJembeResponse) {\n      const dom = xComp.dom\n      components[xComp.execName] = new ComponentRef(\n        xComp.execName,\n        {\n          \"url\": xComp.url,\n          \"changesUrl\": xComp.changesUrl,\n          \"state\": xComp.state,\n        },\n        this.transformXResponseDom(xComp.execName, xComp.dom),\n        false\n      )\n    }\n    return components\n  }\n  /**\n   * Update document with new components:dict\n   * @param {} components \n   */\n  updateDocument(components) {\n    // make list of all existing components that can be display on updated document\n    // list contains all from this.components merged with components where\n    // if there is components with same execname one from components is used\n    let currentComponents = {}\n    // add from this.components if not exist in components otherwise add from components\n    for (const [execName, compRef] of Object.entries(this.components)) {\n      if (components[execName] === undefined) {\n        currentComponents[execName] = compRef\n      } else {\n        currentComponents[execName] = components[execName]\n      }\n    }\n    // add from components if not already added\n    for (const [execName, compRef] of Object.entries(components)) {\n      if (currentComponents[execName] === undefined) {\n        currentComponents[execName] = compRef\n      }\n    }\n    //process current components one by one starting with root page\n    // all components gatthered from document but whitout its placeholder\n    // will be ignored.\n    // chose root/page component from compoents if it exist otherwise use\n    // one on the document\n    let pageExecNames = Object.keys(currentComponents).filter(\n      execName => this.isPageExecName(execName)\n    )\n    let pageExecName = pageExecNames[0]\n    if (pageExecNames.length > 1) {\n      for (const pen of pageExecNames) {\n        if (!currentComponents[pen].onDocument) {\n          pageExecName = pen\n        }\n      }\n    }\n    let processingExecNames = [pageExecName]\n    this.components = {}\n    while (processingExecNames.length > 0) {\n      const currentExecName = processingExecNames.shift()\n      const currentCompoRef = currentComponents[currentExecName]\n      this.mergeComponent(currentCompoRef)\n      this.components[currentCompoRef.execName] = currentCompoRef\n      for (const placeHolderName of Object.keys(currentCompoRef.placeHolders)) {\n        processingExecNames.push(placeHolderName)\n      }\n    }\n    this.initComponentsAPI()\n  }\n  /**\n   * Replaces component dom in this.document\n   * and update this.components\n   */\n  mergeComponent(componentRef) {\n    if (this.isPageExecName(componentRef.execName)) {\n      // if page component is already on document do nothing\n      if (!componentRef.onDocument) {\n        this.document.documentElement.innerHTML = componentRef.dom.innerHTML\n        componentRef.dom = this.document.documentElement\n        componentRef.dom.setAttribute(\"jmb:name\", componentRef.execName)\n        componentRef.getPlaceHolders() // becouse we use innerHTML not appendChild\n        componentRef.onDocument = true\n      }\n    } else {\n      // search this.components for component with placeholder for this component\n      let parentComponent = Object.values(this.components).filter(\n        comp => Object.keys(comp.placeHolders).includes(componentRef.execName)\n      )[0]\n      parentComponent.placeHolders[componentRef.execName].replaceWith(componentRef.dom)\n      componentRef.onDocument = true\n    }\n  }\n  isPageExecName(execName) {\n    return execName.split(\"/\").length === 2\n  }\n\n  addInitialiseCommand(execName, initParams) {\n    const exisitingInitCommands = this.commands.filter(\n      x => x.type === \"init\" && x.componentExecName === execName\n    )\n    if (exisitingInitCommands.length > 0) {\n      for (const key of Object.keys(initParams)) {\n        exisitingInitCommands[0].initParams[key] = initParams[key]\n      }\n    } else if (this.components[execName] !== undefined) {\n      this.commands.push(\n        {\n          \"type\": \"init\",\n          \"componentExecName\": execName,\n          \"initParams\": { ...(this.components[execName].state), ...initParams }\n        }\n      )\n    } else {\n      this.commands.push(\n        {\n          \"type\": \"init\",\n          \"componentExecName\": execName,\n          \"initParams\": initParams\n        }\n      )\n    }\n  }\n\n  addCallCommand(execName, actionName, args, kwargs) {\n    this.commands.push(\n      {\n        \"type\": \"call\",\n        \"componentExecName\": execName,\n        \"actionName\": actionName,\n        \"args\": args,\n        \"kwargs\": kwargs\n      }\n    )\n  }\n  addEmitCommand(execName, eventName, kwargs = {}, to = null) {\n    this.commands.push(\n      {\n        \"type\": \"emit\",\n        \"componentExecName\": execName,\n        \"eventName\": eventName,\n        \"params\": kwargs,\n        \"to\": to\n      }\n    )\n\n  }\n  getXRequestJson() {\n    return JSON.stringify({\n      \"components\": Object.values(this.components).map(x => x.toJsonRequest()),\n      \"commands\": this.commands\n    })\n  }\n  setXRequestUrl(url) {\n    this.xRequestUrl = url\n  }\n  executeCommands(updateLocation = true) {\n    const url = this.xRequestUrl !== null ? this.xRequestUrl : window.location.href\n    const requestBody = this.getXRequestJson()\n    // reset commads since we create request body from it\n    this.commands = []\n    // fetch request and process response\n    fetch(url, {\n      method: \"POST\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      headers: { 'X-JEMBE': true },\n      body: requestBody\n    }).then(\n      response => {\n        if (response.ok) {\n          return response.json()\n        } else {\n          console.error(\"Request not successfull\")\n        }\n      }\n    ).catch(error => {\n      console.error(\"Error in request\", error)\n    }).then(\n      json => this.getComponentsFromXResponse(json)\n    ).then(\n      components => {\n        this.updateDocument(components)\n        if (updateLocation) {\n          this.updateLocation()\n        }\n      }\n    )\n  }\n  initComponentsAPI() {\n    for (const component of Object.values(this.components)) {\n      if (component.api === null) {\n        component.api = new JembeComponentAPI(this, component.execName)\n      }\n    }\n  }\n  updateLocation(replace = false) {\n    let topComponent = null\n    let level = -1\n    let historyState = []\n    for (const component of Object.values(this.components)) {\n      if (component.hierarchyLevel > level) {\n        topComponent = component\n        level = component.hierarchyLevel\n      }\n      historyState.push({ execName: component.execName, state: component.state })\n    }\n    if (topComponent !== null) {\n      if (replace) {\n        history.replaceState(historyState, '', topComponent.url)\n      } else {\n        history.pushState(historyState, '', topComponent.url)\n      }\n    }\n  }\n  onHistoryPopState(event) {\n    if (event.state === null) {\n      window.location = document.location\n    } else {\n      for (const comp of event.state) {\n        this.jembeClient.addInitialiseCommand(comp.execName, comp.state)\n        this.jembeClient.addCallCommand(comp.execName, \"display\")\n      }\n      this.jembeClient.executeCommands(false)\n    }\n  }\n  /**\n   * Used for geting jembeCompoentApi usually attached to document or window.jembeComponent \n   * @param {*} domNode \n   */\n  component(domNode) {\n    const componentExecName = domNode.closest('[jmb\\\\:name]').getAttribute('jmb:name')\n    return this.components[componentExecName].api\n  }\n}\n\nexport { JembeClient }","import { JembeClient } from \"./client.js\";\nwindow.jembeClient = new JembeClient(document)"]}